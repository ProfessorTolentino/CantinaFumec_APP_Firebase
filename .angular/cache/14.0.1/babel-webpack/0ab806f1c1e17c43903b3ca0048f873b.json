{"ast":null,"code":"import { Router } from '@angular/router';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ionic/angular\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(router, auth, fb) {\n      this.router = router;\n      this.auth = auth;\n      this.submitted = false;\n      this.loginError = '';\n      this.passwordType = 'password';\n      this.passwordIcon = 'eye-off-outline';\n      let login = {\n        email: '',\n        password: '',\n        lastpassword: false\n      };\n      let lastpasswordStorage = JSON.parse(localStorage.getItem('lastpassword'));\n\n      if (lastpasswordStorage != null) {\n        login.lastpassword = lastpasswordStorage.lastpassword;\n        login.email = lastpasswordStorage.email;\n        login.password = lastpasswordStorage.password;\n      }\n\n      this.loginForm = fb.group({\n        email: [login.email, Validators.compose([Validators.required, Validators.email])],\n        password: [login.password, Validators.compose([Validators.required, Validators.minLength(6)])],\n        lastpassword: [login.lastpassword]\n      });\n    }\n\n    ngOnInit() {}\n\n    onLogin() {\n      let data = this.loginForm.value;\n      this.submitted = true;\n\n      if (this.loginForm.valid) {\n        if (data.lastpassword) {\n          localStorage.setItem('lastpassword', JSON.stringify({\n            email: data.email,\n            password: data.password,\n            lastpassword: data.lastpassword\n          }));\n        } else {\n          localStorage.removeItem('lastpassword');\n        }\n\n        let credentials = {\n          email: data.email,\n          password: data.password\n        };\n        this.auth.signInWithEmail(credentials).then(() => this.router.navigateByUrl('/tabs/tab2'), error => {\n          this.loginError = error.message;\n          console.log(error.message);\n        }); // this.userData.login(this.login.username);\n      }\n    }\n\n    onSignup() {\n      let data = this.loginForm.value;\n      this.submitted = true;\n\n      if (this.loginForm.valid) {\n        let credentials = {\n          email: data.email,\n          password: data.password\n        }; //Se o usuário não existir, irá cadastrar automaticamente\n\n        this.auth.signUp(credentials).then(() => this.router.navigateByUrl('/tabs/tab3'), error => {\n          this.loginError = error.message;\n          console.log(error.message);\n        });\n      } //  this.router.navigateByUrl('/signup');\n\n    }\n\n    ionViewDidLoad() {\n      console.log('ionViewDidLoad LoginPage');\n    }\n\n    resetPassword() {}\n\n    loginWithGoogle() {\n      this.auth.signInWithGoogle().then(() => this.router.navigateByUrl('/tabs/tab1'), error => console.log(error.message));\n    }\n\n    hideShowPassword() {\n      this.passwordType = this.passwordType === 'text' ? 'password' : 'text';\n      this.passwordIcon = this.passwordIcon === 'eye-off-outline' ? 'eye-outline' : 'eye-off-outline';\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 29,\n    vars: 7,\n    consts: [[1, \"background-image\"], [1, \"login-logo\", \"animated\", \"infinite\", \"pulse\", \"slower\"], [\"src\", \"../../assets/imgs/logo-full2.png\", \"alt\", \"Ionic logo\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"stacked\", \"color\", \"primary\"], [\"formControlName\", \"email\", \"name\", \"email\", \"type\", \"text\", \"spellcheck\", \"false\", \"autocapitalize\", \"off\", \"required\", \"\"], [\"color\", \"danger\"], [\"formControlName\", \"password\", \"name\", \"password\", \"type\", \"password\", \"clearOnEdit\", \"false\", \"required\", \"\", 3, \"type\"], [\"slot\", \"end\", 2, \"margin\", \"auto\", 3, \"name\", \"click\"], [1, \"ion-padding-start\", 3, \"hidden\"], [1, \"bg-transparent\"], [1, \"bg-transparent\", 2, \"font-size\", \"17px\", \"font-weight\", \"bold\"], [\"color\", \"light\", \"slot\", \"start\", \"formControlName\", \"lastpassword\", \"name\", \"lastpassword\"], [\"type\", \"submit\", \"expand\", \"block\", 1, \"btn-grad\", \"animated\", \"bounceInLeft\", \"fast\", 3, \"disabled\"], [\"expand\", \"block\", 1, \"btn-grad-orange\", \"animated\", \"bounceInRight\", \"fast\", 3, \"disabled\", \"click\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_3_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(4, \"ion-list\")(5, \"ion-item\")(6, \"ion-label\", 4);\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"ion-input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"ion-text\", 6);\n        i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 4);\n        i0.ɵɵtext(12, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"ion-input\", 7);\n        i0.ɵɵelementStart(14, \"ion-icon\", 8);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_icon_click_14_listener() {\n          return ctx.hideShowPassword();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"ion-text\", 6)(16, \"p\", 9);\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"ion-item\", 10)(19, \"ion-label\", 11);\n        i0.ɵɵtext(20, \"Lembra senha \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"ion-checkbox\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"ion-row\")(23, \"ion-col\")(24, \"ion-button\", 13);\n        i0.ɵɵtext(25, \"Entrar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"ion-col\")(27, \"ion-button\", 14);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_27_listener() {\n          return ctx.onSignup();\n        });\n        i0.ɵɵtext(28, \"Registrar\");\n        i0.ɵɵelementEnd()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"type\", ctx.passwordType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"name\", ctx.passwordIcon);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.submitted == false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.loginError, \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      }\n    },\n    dependencies: [i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.IonButton, i4.IonCheckbox, i4.IonCol, i4.IonContent, i4.IonIcon, i4.IonInput, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonRow, i4.IonText, i4.BooleanValueAccessor, i4.TextValueAccessor],\n    styles: [\".background-image[_ngcontent-%COMP%]{--background: url(bg-login.png) white -70px 0/125% 110% no-repeat}.btn-grad[_ngcontent-%COMP%]{--background: linear-gradient(to right, #1FA2FF 0%, #12D8FA 51%, #1FA2FF 100%);--border-radius: 60px;border-radius:80px}.btn-grad[_ngcontent-%COMP%]:hover{--background-position: right center}.btn-grad-orange[_ngcontent-%COMP%]{--background: linear-gradient(to right, #ff7e5f 0%, #feb47b 51%, #ff7e5f 100%);--border-radius: 60px;border-radius:80px}.btn-grad-orange[_ngcontent-%COMP%]:hover{background-position:right center}.login-logo[_ngcontent-%COMP%]{padding:30% 0 0;min-height:200px;text-align:center}.login-logo[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-top:10px;max-width:240px}.list[_ngcontent-%COMP%]{margin-bottom:0}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}