{"ast":null,"code":"import { AngularFireAuth } from '@angular/fire/compat/auth';\nimport firebase from 'firebase/compat/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(afAuth) {\n      this.afAuth = afAuth;\n      afAuth.authState.subscribe(user => {\n        this.user = user;\n      });\n    }\n\n    signInWithEmail(credentials) {\n      console.log('Sign in with email');\n      return this.afAuth.signInWithEmailAndPassword(credentials.email, credentials.password);\n    }\n\n    signUp(credentials) {\n      return this.afAuth.createUserWithEmailAndPassword(credentials.email, credentials.password);\n    }\n\n    get authenticated() {\n      return this.user !== null;\n    }\n\n    getEmail() {\n      return this.user && this.user.email;\n    }\n\n    signOut() {\n      return this.afAuth.signOut();\n    }\n\n    signInWithGoogle() {\n      console.log('Sign in with google');\n      return this.oauthSignIn(new firebase.auth.GoogleAuthProvider());\n    }\n\n    oauthSignIn(provider) {\n      if (!window.cordova) {\n        return this.afAuth.signInWithPopup(provider);\n      } else {\n        return this.afAuth.signInWithRedirect(provider).then(() => {\n          return this.afAuth.getRedirectResult().then(result => {\n            // This gives you a Google Access Token.\n            // You can use it to access the Google API.\n            const token = result.credential.providerId; // The signed-in user info.\n\n            const user = result.user;\n            console.log(token, user);\n          }).catch(function (error) {\n            // Handle Errors here.\n            alert(error.message);\n          });\n        });\n      }\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.AngularFireAuth));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}